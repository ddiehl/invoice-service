2020-10-22 16:24:53 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.lambda$0(JDBCDataSource.java:173)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.openConnection(JDBCDataSource.java:192)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.openConnection(GenericDataSource.java:124)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.openConnection(H2DataSource.java:74)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:97)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.initializeMainContext(JDBCRemoteInstance.java:91)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.<init>(JDBCRemoteInstance.java:57)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.initializeRemoteInstance(JDBCDataSource.java:106)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:106)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.<init>(H2DataSource.java:43)
	at org.jkiss.dbeaver.ext.h2.model.H2MetaModel.createDataSourceImpl(H2MetaModel.java:47)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:106)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:855)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:70)
	at org.jkiss.dbeaver.runtime.jobs.ConnectionTestJob.run(ConnectionTestJob.java:103)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 39 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 33 more
2020-10-22 16:25:14 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1749)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.populateClientAppName(GenericDataSource.java:164)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.openConnection(GenericDataSource.java:127)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.openConnection(H2DataSource.java:74)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:97)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.initializeMainContext(JDBCRemoteInstance.java:91)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.<init>(JDBCRemoteInstance.java:57)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.initializeRemoteInstance(JDBCDataSource.java:106)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:106)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.<init>(H2DataSource.java:43)
	at org.jkiss.dbeaver.ext.h2.model.H2MetaModel.createDataSourceImpl(H2MetaModel.java:47)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:106)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:855)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:70)
	at org.jkiss.dbeaver.runtime.jobs.ConnectionTestJob.run(ConnectionTestJob.java:103)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
2020-10-22 16:26:00 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1749)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.populateClientAppName(GenericDataSource.java:164)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.openConnection(GenericDataSource.java:127)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.openConnection(H2DataSource.java:74)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:97)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.initializeMainContext(JDBCRemoteInstance.java:91)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.<init>(JDBCRemoteInstance.java:57)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.initializeRemoteInstance(JDBCDataSource.java:106)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:106)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.<init>(H2DataSource.java:43)
	at org.jkiss.dbeaver.ext.h2.model.H2MetaModel.createDataSourceImpl(H2MetaModel.java:47)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:106)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:855)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:70)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.runSync(ConnectJob.java:98)
	at org.jkiss.dbeaver.ui.actions.datasource.DataSourceHandler.connectToDataSource(DataSourceHandler.java:106)
	at org.jkiss.dbeaver.ui.actions.datasource.UIServiceConnectionsImpl.initConnection(UIServiceConnectionsImpl.java:65)
	at org.jkiss.dbeaver.model.navigator.DBNDataSource.initializeNode(DBNDataSource.java:157)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:199)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:1)
	at org.jkiss.dbeaver.model.navigator.DBNUtils.getNodeChildrenFiltered(DBNUtils.java:70)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:49)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:1)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:87)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:71)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
2020-10-22 16:29:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT
	(SELECT COUNT(1) FROM INVOICE WHERE SUPPLIER_ID='supplier_7') AS INVOICES,
	(SELECT COUNT(1) FROM INVOICE WHERE SUPPLIER_ID='supplier_7' AND COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT
	
	;[*]
SELECT
  FROM
(SELECT COUNT(ID) AS VAL FROM INVOICE WHERE SUPPLIERID='supplier_7') )
SELECT COUNT(ID) FROM INVOICE WHERE SUPPLIERID='supplier_7' AND COALESCE(PAYMENTAMOUNT, 0) < INVOICEAMOUNT
SELECT COUNT(ID) FROM INVOICE WHERE SUPPLIERID='supplier_7' AND COALESCE(PAYMENTAMOUNT, 0) < INVOICEAMOUNT AND INVOICEDATE + TERMS >= NOW()
SELECT SUM(INVOICEAMOUNT - COALESCE(PAYMENTAMOUNT, 0)) FROM INVOICE WHERE SUPPLIERID='supplier_7' AND COALESCE(PAYMENTAMOUNT, 0) < INVOICEAMOUNT
SELECT SUM(INVOICEAMOUNT) FROM INVOICE WHERE SUPPLIERID='supplier_7' AND COALESCE(PAYMENTAMOUNT, 0) < INVOICEAMOUNT AND INVOICEDATE + TERMS >= NOW()
"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, OR, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
SELECT
	(SELECT COUNT(1) FROM invoice WHERE supplier_id='supplier_7') AS invoices,
	(SELECT COUNT(1) FROM invoice WHERE supplier_id='supplier_7' AND COALESCE(payment_amount, 0) < invoice_amount
	
	;
SELECT
  FROM
(SELECT COUNT(id) as val FROM Invoice WHERE supplierId='supplier_7') )
SELECT COUNT(id) FROM Invoice WHERE supplierId='supplier_7' AND COALESCE(paymentAmount, 0) < invoiceAmount
SELECT COUNT(id) FROM Invoice WHERE supplierId='supplier_7' AND COALESCE(paymentAmount, 0) < invoiceAmount AND invoiceDate + terms >= now()
SELECT SUM(invoiceAmount - COALESCE(paymentAmount, 0)) FROM Invoice WHERE supplierId='supplier_7' AND COALESCE(paymentAmount, 0) < invoiceAmount
SELECT SUM(invoiceAmount) FROM Invoice WHERE supplierId='supplier_7' AND COALESCE(paymentAmount, 0) < invoiceAmount AND invoiceDate + terms >= now()
 [42001-200]
2020-10-22 16:32:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT 1
FROM 
    INVOICE I
    INNER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE AND COALESCE[*](PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT) OI
     ON I.SUPPLIER_ID = OI.SUPPLIER_ID
WHERE I.SUPPLIER_ID = 'supplier_7'"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, _LOCAL_AND_GLOBAL_, OR, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, )"; SQL statement:
SELECT 1
FROM 
    invoice i
    INNER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE AND COALESCE(payment_amount, 0) < invoice_amount) oi
     ON i.SUPPLIER_ID = oi.supplier_id
WHERE i.SUPPLIER_ID = 'supplier_7' [42001-200]
2020-10-22 16:32:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I
    INNER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE AND COALESCE[*](PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT) OI
     ON I.SUPPLIER_ID = OI.SUPPLIER_ID
WHERE I.SUPPLIER_ID = 'supplier_7'"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, _LOCAL_AND_GLOBAL_, OR, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, )"; SQL statement:
SELECT *
FROM 
    invoice i
    INNER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE AND COALESCE(payment_amount, 0) < invoice_amount) oi
     ON i.SUPPLIER_ID = oi.supplier_id
WHERE i.SUPPLIER_ID = 'supplier_7' [42001-200]
2020-10-22 16:33:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I,
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE AND COALESCE[*](PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT) OI
WHERE I.SUPPLIER_ID = 'supplier_7'
   AND I.SUPPLIER_ID = OI.SUPPLIER_ID"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, _LOCAL_AND_GLOBAL_, OR, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, )"; SQL statement:
SELECT *
FROM 
    invoice i,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE AND COALESCE(payment_amount, 0) < invoice_amount) oi
WHERE i.SUPPLIER_ID = 'supplier_7'
   AND i.SUPPLIER_ID = oi.supplier_id [42001-200]
2020-10-22 16:33:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I,
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE AND COALESCE[*](PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT) OI
WHERE I.SUPPLIER_ID = 'supplier_7'
   AND I.SUPPLIER_ID = OI.SUPPLIER_ID"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, _LOCAL_AND_GLOBAL_, OR, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, )"; SQL statement:
SELECT *
FROM 
    invoice i,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE AND COALESCE(payment_amount, 0) < invoice_amount) oi
WHERE i.SUPPLIER_ID = 'supplier_7'
   AND i.SUPPLIER_ID = oi.supplier_id [42001-200]
2020-10-22 16:33:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I,
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE AND COALESCE[*](PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT) OI
WHERE I.SUPPLIER_ID = 'supplier_7'
   AND I.SUPPLIER_ID = OI.SUPPLIER_ID"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, _LOCAL_AND_GLOBAL_, OR, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, )"; SQL statement:
SELECT *
FROM 
    invoice i,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE AND COALESCE(payment_amount, 0) < invoice_amount) oi
WHERE i.SUPPLIER_ID = 'supplier_7'
   AND i.SUPPLIER_ID = oi.supplier_id [42001-200]
2020-10-22 16:37:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE AND COALESCE[*](PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT"; SQL statement:
SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE AND COALESCE(payment_amount, 0) < invoice_amount [42000-200]
2020-10-22 16:37:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "SUPPLIER_ID" must be in the GROUP BY list; SQL statement:
SELECT *
FROM 
    invoice i,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount) oi
WHERE i.SUPPLIER_ID = 'supplier_7'
   AND i.SUPPLIER_ID = oi.supplier_id [90016-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.updateAggregate(ExpressionColumn.java:182)
	at org.h2.command.dml.Select.updateAgg(Select.java:545)
	at org.h2.command.dml.Select.gatherGroup(Select.java:525)
	at org.h2.command.dml.Select.queryGroup(Select.java:487)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:839)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.index.ViewIndex.find(ViewIndex.java:288)
	at org.h2.index.ViewIndex.find(ViewIndex.java:160)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:327)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:130)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeStatement(SQLQueryJob.java:509)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.lambda$0(SQLQueryJob.java:440)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:427)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.extractData(SQLQueryJob.java:808)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:3092)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.lambda$0(ResultSetJobDataRead.java:121)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:119)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetViewer$ResultSetDataPumpJob.run(ResultSetViewer.java:4454)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
2020-10-22 16:43:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "PAYMENTAMOUNT" not found; SQL statement:
CREATE FORCE VIEW (
    SELECT
        "SUPPLIER_ID",
        SUM("INVOICE_AMOUNT" - COALESCE("PAYMENTAMOUNT", 0))
    FROM "PUBLIC"."INVOICE"
    WHERE COALESCE("PAYMENTAMOUNT", 0) < "INVOICEAMOUNT"
) AS
SELECT
    "SUPPLIER_ID",
    SUM("INVOICE_AMOUNT" - COALESCE("PAYMENTAMOUNT", 0))
FROM "PUBLIC"."INVOICE"
WHERE COALESCE("PAYMENTAMOUNT", 0) < "INVOICEAMOUNT" [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.expression.function.Function.optimize(Function.java:2594)
	at org.h2.expression.BinaryOperation.optimize(BinaryOperation.java:139)
	at org.h2.expression.aggregate.AbstractAggregate.optimize(AbstractAggregate.java:92)
	at org.h2.expression.aggregate.Aggregate.optimize(Aggregate.java:705)
	at org.h2.command.dml.Select.prepare(Select.java:1206)
	at org.h2.command.Parser.prepare(Parser.java:723)
	at org.h2.engine.Session.prepare(Session.java:622)
	at org.h2.table.TableView.compileViewQuery(TableView.java:116)
	at org.h2.table.TableView.initColumnsAndTables(TableView.java:168)
	at org.h2.table.TableView.init(TableView.java:109)
	at org.h2.table.TableView.<init>(TableView.java:71)
	at org.h2.table.TableView.createTempView(TableView.java:548)
	at org.h2.command.dml.Query.toTable(Query.java:928)
	at org.h2.command.Parser.readTableFilter(Parser.java:1895)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2827)
	at org.h2.command.Parser.parseSelect(Parser.java:2959)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:327)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:130)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeStatement(SQLQueryJob.java:509)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.lambda$0(SQLQueryJob.java:440)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:427)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.extractData(SQLQueryJob.java:808)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:3092)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.lambda$0(ResultSetJobDataRead.java:121)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:119)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetViewer$ResultSetDataPumpJob.run(ResultSetViewer.java:4454)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
2020-10-22 16:45:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "SUPPLIER_ID" must be in the GROUP BY list; SQL statement:
SELECT *
FROM 
    invoice i,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now()) li,
    (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount) toi,
    (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now()) tli
WHERE 1=1--i.SUPPLIER_ID = :supplierId
   AND i.SUPPLIER_ID = oi.supplier_id
   AND i.SUPPLIER_ID = li.supplier_id
   AND i.SUPPLIER_ID = toi.supplier_id
   AND i.SUPPLIER_ID = tli.supplier_id [90016-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.updateAggregate(ExpressionColumn.java:182)
	at org.h2.command.dml.Select.updateAgg(Select.java:545)
	at org.h2.command.dml.Select.gatherGroup(Select.java:525)
	at org.h2.command.dml.Select.queryGroup(Select.java:487)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:839)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.index.ViewIndex.find(ViewIndex.java:288)
	at org.h2.index.ViewIndex.find(ViewIndex.java:160)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.table.TableFilter.next(TableFilter.java:568)
	at org.h2.table.TableFilter.next(TableFilter.java:568)
	at org.h2.table.TableFilter.next(TableFilter.java:568)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:327)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:130)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeStatement(SQLQueryJob.java:509)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.lambda$0(SQLQueryJob.java:440)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:427)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.extractData(SQLQueryJob.java:808)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:3092)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.lambda$0(ResultSetJobDataRead.java:121)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:119)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetViewer$ResultSetDataPumpJob.run(ResultSetViewer.java:4454)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
2020-10-22 16:46:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I,
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI,
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI,
    (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI,
    (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
WHERE 1=1                             
   AND I.SUPPLIER_ID = OI.SUPPLIER_ID +
   AND I[*].SUPPLIER_ID = LI.SUPPLIER_ID +
   AND I.SUPPLIER_ID = TOI.SUPPLIER_ID +
   AND I.SUPPLIER_ID = TLI.SUPPLIER_ID +"; SQL statement:
SELECT *
FROM 
    invoice i,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li,
    (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi,
    (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
WHERE 1=1--i.SUPPLIER_ID = :supplierId
   AND i.SUPPLIER_ID = oi.supplier_id +
   AND i.SUPPLIER_ID = li.supplier_id +
   AND i.SUPPLIER_ID = toi.supplier_id +
   AND i.SUPPLIER_ID = tli.supplier_id + [42000-200]
2020-10-22 16:46:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Schema "OI" not found; SQL statement:
SELECT *
FROM 
    invoice i,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi,
    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li,
    (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi,
    (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
WHERE 1=1--i.SUPPLIER_ID = :supplierId
   AND i.SUPPLIER_ID = oi.supplier_id(+)
   AND i.SUPPLIER_ID = li.supplier_id(+)
   AND i.SUPPLIER_ID = toi.supplier_id(+)
   AND i.SUPPLIER_ID = tli.supplier_id(+) [90079-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.engine.Database.getSchema(Database.java:1936)
	at org.h2.command.Parser.readTermObjectDot(Parser.java:4189)
	at org.h2.command.Parser.readTerm(Parser.java:4307)
	at org.h2.command.Parser.readFactor(Parser.java:3343)
	at org.h2.command.Parser.readSum(Parser.java:3330)
	at org.h2.command.Parser.readConcat(Parser.java:3305)
	at org.h2.command.Parser.readCondition(Parser.java:3238)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3048)
	at org.h2.command.Parser.parseSelect(Parser.java:2962)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.execute(JDBCStatementImpl.java:327)
	at org.jkiss.dbeaver.model.impl.jdbc.exec.JDBCStatementImpl.executeStatement(JDBCStatementImpl.java:130)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeStatement(SQLQueryJob.java:509)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.lambda$0(SQLQueryJob.java:440)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.executeSingleQuery(SQLQueryJob.java:427)
	at org.jkiss.dbeaver.ui.editors.sql.execute.SQLQueryJob.extractData(SQLQueryJob.java:808)
	at org.jkiss.dbeaver.ui.editors.sql.SQLEditor$QueryResultsContainer.readData(SQLEditor.java:3092)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.lambda$0(ResultSetJobDataRead.java:121)
	at org.jkiss.dbeaver.model.exec.DBExecUtils.tryExecuteRecover(DBExecUtils.java:168)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetJobDataRead.run(ResultSetJobDataRead.java:119)
	at org.jkiss.dbeaver.ui.controls.resultset.ResultSetViewer$ResultSetDataPumpJob.run(ResultSetViewer.java:4454)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
2020-10-22 16:48:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I
    RIGHT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    RIGHT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    RIGHT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    RIGHT OUTER JOIN ON[*] (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID(+)
WHERE 1=1                              
"; expected "identifier"; SQL statement:
SELECT *
FROM 
    invoice i
    RIGHT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    RIGHT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    RIGHT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    RIGHT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id(+)
WHERE 1=1--i.SUPPLIER_ID = :supplierId;
 [42001-200]
2020-10-22 16:49:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I
    RIGHT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    RIGHT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    RIGHT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    RIGHT OUTER JOIN ON[*] (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE 1=1                              
"; expected "identifier"; SQL statement:
SELECT *
FROM 
    invoice i
    RIGHT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    RIGHT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    RIGHT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    RIGHT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1--i.SUPPLIER_ID = :supplierId;
 [42001-200]
2020-10-22 16:49:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    INVOICE I
    RIGHT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    RIGHT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    RIGHT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    RIGHT OUTER JOIN ON[*] (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE 1=1                             
"; expected "identifier"; SQL statement:
SELECT *
FROM 
    invoice i
    RIGHT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    RIGHT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    RIGHT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    RIGHT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1--i.SUPPLIER_ID = :supplierId
 [42001-200]
2020-10-22 16:51:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT SUPPLIER_ID, COUNT(1) 
FROM 
    INVOICE IOK, 
    RIGHT[*] OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
                                                                                                                                                                                      
                                       
                                                                                                                                                                                              
                                        
                                                                                                                                                                                                                                   
                                        
WHERE 1=1
GROUP BY SUPPLIER_ID "; expected "identifier"; SQL statement:
SELECT supplier_id, count(1) 
FROM 
    invoice iok, 
    RIGHT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
--    RIGHT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
--    ON i.SUPPLIER_ID = li.supplier_id
--    RIGHT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
--    ON i.SUPPLIER_ID = toi.supplier_id
--    RIGHT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
GROUP BY supplier_id  [42001-200]
2020-10-22 16:57:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT *
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I, 
    RIGHT[*] OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
                                                                                                                                                                                      
                                       
                                                                                                                                                                                              
                                        
                                                                                                                                                                                                                                   
                                        
WHERE 1=1
 "; expected "identifier"; SQL statement:
SELECT *
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i, 
    RIGHT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
--    RIGHT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
--    ON i.SUPPLIER_ID = li.supplier_id
--    RIGHT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
--    ON i.SUPPLIER_ID = toi.supplier_id
--    RIGHT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42001-200]
2020-10-22 17:00:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE (LI.VAL, 0) AS OPEN_INVOICES, 
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    LEFT OUTER JOIN ON (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE (li.val, 0) AS OPEN_invoices, 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:00:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE (LI.VAL, 0) AS OPEN_INVOICES, 
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
                                                                                                                                                                                                                                   
                                        
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE (li.val, 0) AS OPEN_invoices, 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
--     LEFT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:01:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES, COALESCE (TOI.VAL) TOTAL_OPEN_INVOICES 
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    LEFT OUTER JOIN ON (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:01:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES, COALESCE (TOI.VAL) TOTAL_OPEN_INVOICES 
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    LEFT OUTER JOIN ON (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:01:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES, COALESCE (TOI.VAL) AS TOTAL_OPEN_INVOICES 
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    LEFT OUTER JOIN ON (SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN (SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN ON (SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:02:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES, COALESCE (TOI.VAL) AS TOTAL_OPEN_INVOICES 
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
                         
                                                                                                                                                                                                                
                                        
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN 
    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
--    LEFT OUTER JOIN ON 
--    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:02:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES, COALESCE (TOI.VAL) AS TOTAL_OPEN_INVOICES 
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
                      
                                                                                                                                                                              
                                        
                         
                                                                                                                                                                                                                
                                        
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
--    LEFT OUTER JOIN 
--    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
--    ON i.SUPPLIER_ID = toi.supplier_id
--    LEFT OUTER JOIN ON 
--    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:02:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES
                                              
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
                      
                                                                                                                                                                              
                                        
                         
                                                                                                                                                                                                                
                                        
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) open_invoices, COALESCE (li.val, 0) AS late_invoices
--, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
--    LEFT OUTER JOIN 
--    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
--    ON i.SUPPLIER_ID = toi.supplier_id
--    LEFT OUTER JOIN ON 
--    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:03:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) AS OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES
                                              
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
                      
                                                                                                                                                                              
                                        
                         
                                                                                                                                                                                                                
                                        
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) AS open_invoices, COALESCE (li.val, 0) AS late_invoices
--, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
--    LEFT OUTER JOIN 
--    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
--    ON i.SUPPLIER_ID = toi.supplier_id
--    LEFT OUTER JOIN ON 
--    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:03:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*], COALESCE(OI.VAL, 0) AS OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES
                                              
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
                      
                                                                                                                                                                              
                                        
                         
                                                                                                                                                                                                                
                                        
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices, COALESCE(oi.val, 0) AS open_invoices, COALESCE (li.val, 0) AS late_invoices
--, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
--    LEFT OUTER JOIN 
--    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
--    ON i.SUPPLIER_ID = toi.supplier_id
--    LEFT OUTER JOIN ON 
--    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:04:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL INVOICES[*]
                                                                               
                                              
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
                      
                                                                                                                                                                              
                                        
                         
                                                                                                                                                                                                                
                                        
WHERE 1=1
 "; SQL statement:
SELECT i.supplier_id, i.val AS total invoices
--, COALESCE(oi.val, 0) AS open_invoices, COALESCE (li.val, 0) AS late_invoices
--, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
--    LEFT OUTER JOIN 
--    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
--    ON i.SUPPLIER_ID = toi.supplier_id
--    LEFT OUTER JOIN ON 
--    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
--    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42000-200]
2020-10-22 17:04:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL_INVOICES, COALESCE(OI.VAL, 0) AS OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES
                                              
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    LEFT OUTER JOIN ON[*] 
    	(SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE 1=1
 "; expected "identifier"; SQL statement:
SELECT i.supplier_id, i.val AS total_invoices, COALESCE(oi.val, 0) AS open_invoices, COALESCE (li.val, 0) AS late_invoices
--, COALESCE (toi.val) AS total_open_invoices 
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN 
    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN ON 
    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE 1=1
  [42001-200]
2020-10-22 17:24:32 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:73)
	at org.springframework.beans.factory.ObjectProvider.ifAvailable(ObjectProvider.java:93)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5128)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.diehl.invoice.App.main(App.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 97 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 91 more
2020-10-22 17:24:34 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 52 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 46 more
2020-10-22 17:57:51 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:73)
	at org.springframework.beans.factory.ObjectProvider.ifAvailable(ObjectProvider.java:93)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5128)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.diehl.invoice.App.main(App.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 97 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 91 more
2020-10-22 17:57:53 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 52 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 46 more
2020-10-22 17:57:55 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:155)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:96)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 50 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Volumes/Backup/DanielDiehl/dev/workspaces/Java/default/invoice-service/h2-db/internaldb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 44 more
2020-10-22 17:59:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT INVOICESUM0_.SUPPLIED_ID AS SUPPLIED1_0_0_, INVOICESUM0_.LATE_INVOICES AS LATE_INV2_0_0_, INVOICESUM0_.OPEN_INVOICES AS OPEN_INV3_0_0_, INVOICESUM0_.TOTAL_INVOICES AS TOTAL_IN4_0_0_, INVOICESUM0_.TOTAL_LATE_INVOICES AS TOTAL_LA5_0_0_, INVOICESUM0_.TOTAL_OPEN_INVOICES AS TOTAL_OP6_0_0_ FROM ( SELECT I.SUPPLIER_ID, I.VAL AS TOTAL_INVOICES, COALESCE(OI.VAL, 0) AS OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES, COALESCE (TOI.VAL) AS TOTAL_OPEN_INVOICES, COALESCE (TLI.VAL, 0) AS TOTAL_LATE_INVOICES
FROM
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID
    LEFT OUTER JOIN
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN
    	(SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    LEFT OUTER JOIN
    	(SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT) - COALESCE(PAYMENT_AMOUNT, 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID
WHERE I.SUPPLIER_ID = :[*]SUPPLIERID
 ) INVOICESUM0_ WHERE INVOICESUM0_.SUPPLIED_ID=?"; expected "ALL, ANY, SOME"; SQL statement:
select invoicesum0_.supplied_id as supplied1_0_0_, invoicesum0_.late_invoices as late_inv2_0_0_, invoicesum0_.open_invoices as open_inv3_0_0_, invoicesum0_.total_invoices as total_in4_0_0_, invoicesum0_.total_late_invoices as total_la5_0_0_, invoicesum0_.total_open_invoices as total_op6_0_0_ from ( SELECT i.supplier_id, i.val AS total_invoices, COALESCE(oi.val, 0) AS open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) AS total_open_invoices, COALESCE (tli.val, 0) AS total_late_invoices
FROM
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id
    LEFT OUTER JOIN
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN
    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN
    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
WHERE i.SUPPLIER_ID = :supplierId
 ) invoicesum0_ where invoicesum0_.supplied_id=? [42001-200]
2020-10-22 17:59:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "INVOICESUM0_.SUPPLIED_ID" not found; SQL statement:
select invoicesum0_.supplied_id as supplied1_0_0_, invoicesum0_.late_invoices as late_inv2_0_0_, invoicesum0_.open_invoices as open_inv3_0_0_, invoicesum0_.total_invoices as total_in4_0_0_, invoicesum0_.total_late_invoices as total_la5_0_0_, invoicesum0_.total_open_invoices as total_op6_0_0_ from ( SELECT i.supplier_id, i.val AS total_invoices, COALESCE(oi.val, 0) AS open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) AS total_open_invoices, COALESCE (tli.val, 0) AS total_late_invoices
FROM
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id
    LEFT OUTER JOIN
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN
    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN
    	(SELECT supplier_id, SUM(invoice_amount) - COALESCE(payment_amount, 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id
 ) invoicesum0_ where invoicesum0_.supplied_id=? [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.dml.Select.prepare(Select.java:1206)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:76)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:352)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:337)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.prepareQueryStatement(AbstractLoadPlanBasedLoader.java:198)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:162)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:262)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4418)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4408)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:569)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:537)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1187)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1176)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:194)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2787)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2768)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2724)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2768)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3323)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3290)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:366)
	at com.sun.proxy.$Proxy105.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)
	at com.sun.proxy.$Proxy105.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:281)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy107.findById(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy104.findById(Unknown Source)
	at com.diehl.invoice.service.InvoiceService.retrieveSupplierSummary(InvoiceService.java:109)
	at com.diehl.invoice.controller.InvoiceController.getinvoiceSummary(InvoiceController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-10-23 15:30:35 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1749)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.populateClientAppName(GenericDataSource.java:164)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.openConnection(GenericDataSource.java:127)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.openConnection(H2DataSource.java:74)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCExecutionContext.connect(JDBCExecutionContext.java:97)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.initializeMainContext(JDBCRemoteInstance.java:91)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCRemoteInstance.<init>(JDBCRemoteInstance.java:57)
	at org.jkiss.dbeaver.model.impl.jdbc.JDBCDataSource.initializeRemoteInstance(JDBCDataSource.java:106)
	at org.jkiss.dbeaver.ext.generic.model.GenericDataSource.<init>(GenericDataSource.java:106)
	at org.jkiss.dbeaver.ext.h2.model.H2DataSource.<init>(H2DataSource.java:43)
	at org.jkiss.dbeaver.ext.h2.model.H2MetaModel.createDataSourceImpl(H2MetaModel.java:47)
	at org.jkiss.dbeaver.ext.generic.GenericDataSourceProvider.openDataSource(GenericDataSourceProvider.java:106)
	at org.jkiss.dbeaver.registry.DataSourceDescriptor.connect(DataSourceDescriptor.java:855)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.run(ConnectJob.java:70)
	at org.jkiss.dbeaver.runtime.jobs.ConnectJob.runSync(ConnectJob.java:98)
	at org.jkiss.dbeaver.ui.actions.datasource.DataSourceHandler.connectToDataSource(DataSourceHandler.java:106)
	at org.jkiss.dbeaver.ui.actions.datasource.UIServiceConnectionsImpl.initConnection(UIServiceConnectionsImpl.java:65)
	at org.jkiss.dbeaver.model.navigator.DBNDataSource.initializeNode(DBNDataSource.java:157)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:199)
	at org.jkiss.dbeaver.model.navigator.DBNDatabaseNode.getChildren(DBNDatabaseNode.java:1)
	at org.jkiss.dbeaver.model.navigator.DBNUtils.getNodeChildrenFiltered(DBNUtils.java:70)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:49)
	at org.jkiss.dbeaver.ui.navigator.database.load.TreeLoadService.evaluate(TreeLoadService.java:1)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:87)
	at org.jkiss.dbeaver.ui.LoadingJob.run(LoadingJob.java:71)
	at org.jkiss.dbeaver.model.runtime.AbstractJob.run(AbstractJob.java:105)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
2020-10-23 15:30:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT I.SUPPLIER_ID, I.VAL AS TOTAL_INVOICES, COALESCE(OI.VAL, 0) AS OPEN_INVOICES, COALESCE (LI.VAL, 0) AS LATE_INVOICES, COALESCE (TOI.VAL) AS TOTAL_OPEN_INVOICES, COALESCE (TLI.VAL, 0) AS TOTAL_LATE_INVOICES
FROM 
    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE GROUP BY SUPPLIER_ID) I 
    LEFT OUTER JOIN
	    (SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) OI
	ON I.SUPPLIER_ID = OI.SUPPLIER_ID 
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, COUNT(1) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) LI
    ON I.SUPPLIER_ID = LI.SUPPLIER_ID
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, SUM(INVOICE_AMOUNT - COALESCE(PAYMENT_AMOUNT, 0)) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT GROUP BY SUPPLIER_ID) TOI
    ON I.SUPPLIER_ID = TOI.SUPPLIER_ID
    LEFT OUTER JOIN 
    	(SELECT SUPPLIER_ID, SUM(COALESCE(INVOICE_AMOUNT),[*] 0) AS VAL FROM INVOICE WHERE COALESCE(PAYMENT_AMOUNT, 0) < INVOICE_AMOUNT AND INVOICE_DATE + TERMS >= NOW() GROUP BY SUPPLIER_ID) TLI
    ON I.SUPPLIER_ID = TLI.SUPPLIER_ID"; expected "[, ::, AT, FORMAT, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, OR, )"; SQL statement:
SELECT i.supplier_id, i.val AS total_invoices, COALESCE(oi.val, 0) AS open_invoices, COALESCE (li.val, 0) AS late_invoices, COALESCE (toi.val) AS total_open_invoices, COALESCE (tli.val, 0) AS total_late_invoices
FROM 
    (SELECT supplier_id, count(1) AS val FROM invoice GROUP BY supplier_id) i 
    LEFT OUTER join
	    (SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) oi
	ON i.SUPPLIER_ID = oi.supplier_id 
    LEFT OUTER JOIN 
    	(SELECT supplier_id, COUNT(1) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) li
    ON i.SUPPLIER_ID = li.supplier_id
    LEFT OUTER JOIN 
    	(SELECT supplier_id, SUM(invoice_amount - COALESCE(payment_amount, 0)) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount GROUP BY supplier_id) toi
    ON i.SUPPLIER_ID = toi.supplier_id
    LEFT OUTER JOIN 
    	(SELECT supplier_id, SUM(COALESCE(invoice_amount), 0) AS val FROM invoice WHERE COALESCE(payment_amount, 0) < invoice_amount AND invoice_date + terms >= now() GROUP BY supplier_id) tli
    ON i.SUPPLIER_ID = tli.supplier_id [42001-200]
